package ankit

import (
	"encoding/csv"
	"io"
	"log"
)

// Note consists of fields.
type Note interface {
	Err() error
	Fields() []string
}

// Deck is a group of cards, which are generated by notes.
type Deck interface {
	Notes() <-chan Note
}

type oneNoteDeck struct{ Note }

func (d oneNoteDeck) Notes() <-chan Note {
	notes := make(chan Note, 1)
	notes <- d.Note
	close(notes)
	return notes
}

// OneNoteDeck returns a Deck with only one Note.
func OneNoteDeck(n Note) Deck {
	return oneNoteDeck{Note: n}
}

// Export write Deck's notes to io.Writer.
func Export(w io.Writer, d Deck) error {
	cw := csv.NewWriter(w)

	for note := range d.Notes() {
		if err := note.Err(); err != nil {
			log.Printf("note error: %v", err)
			continue
		}

		fields := note.Fields()
		if err := cw.Write(fields); err != nil {
			return err
		}
	}
	cw.Flush()

	return nil
}
